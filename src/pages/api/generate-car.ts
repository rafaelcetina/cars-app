import { contentService } from '../../lib/content-service';

// src/pages/api/generate-car.ts
export async function POST({ request }: { request: Request }) {
  const { brand, model, year } = await request.json();

  try {
    // Check if content already exists
    const existing = await contentService.checkContentExists(brand, model, year);
    if (existing.exists && existing.content) {
      return new Response(
        JSON.stringify({
          success: true,
          content: existing.content.content,
          filename: `${brand.toLowerCase()}-${model.toLowerCase()}-${year}.md`,
          cached: true,
        }),
        {
          status: 200,
          headers: { 'Content-Type': 'application/json' },
        }
      );
    }

    // For now, return a placeholder response since AI generation is handled in backend
    const placeholderContent = {
      title: `${year} ${brand} ${model}`,
      description: `Content for ${year} ${brand} ${model} will be generated by the backend.`,
      specifications: {
        engine: 'TBD',
        transmission: 'TBD',
        fuelType: 'TBD',
        power: 'TBD',
        torque: 'TBD',
        acceleration: 'TBD',
        topSpeed: 'TBD',
        fuelEconomy: 'TBD',
      },
      features: ['Feature details pending'],
      pros: ['Pros pending'],
      cons: ['Cons pending'],
      conclusion: 'Content generation pending',
    };

    // Convert to JSON string for storage
    const contentString = JSON.stringify(placeholderContent);

    // Save placeholder to database
    const savedContent = await contentService.saveContent(brand, model, year, contentString);

    return new Response(
      JSON.stringify({
        success: true,
        content: placeholderContent,
        cached: false,
        savedContent,
        message: 'Content generation request received. Backend will process this request.',
      }),
      {
        status: 200,
        headers: { 'Content-Type': 'application/json' },
      }
    );
  } catch (error) {
    console.error('‚ùå Error processing request:', error);
    return new Response(JSON.stringify({ error: (error as Error).message }), {
      status: 500,
    });
  }
}
