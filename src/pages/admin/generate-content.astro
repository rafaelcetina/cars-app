---
import Layout from '../../layouts/Layout.astro';
---

<Layout title="Generate Car Content - Admin">
  <div class="px-4 sm:px-6 lg:px-8">
    <div class="sm:flex sm:items-center">
      <div class="sm:flex-auto">
        <h1 class="text-3xl font-bold tracking-tight text-gray-900 dark:text-white">Generate Car Content</h1>
        <p class="mt-2 text-sm text-gray-700 dark:text-gray-300">
          Generate detailed markdown content for car models.
        </p>
      </div>
    </div>
    
    <div class="mt-8">
      <div class="bg-white dark:bg-gray-800 shadow rounded-lg p-6">
        <form id="generateForm" class="space-y-6">
          <div class="grid grid-cols-1 gap-6 sm:grid-cols-3">
            <div>
              <label for="brand" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                Brand
              </label>
              <input
                type="text"
                id="brand"
                name="brand"
                required
                class="mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white"
                placeholder="e.g., Toyota"
              />
            </div>
            
            <div>
              <label for="model" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                Model
              </label>
              <input
                type="text"
                id="model"
                name="model"
                required
                class="mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white"
                placeholder="e.g., Camry"
              />
            </div>
            
            <div>
              <label for="year" class="block text-sm font-medium text-gray-700 dark:text-gray-300">
                Year
              </label>
              <input
                type="number"
                id="year"
                name="year"
                required
                min="1900"
                max="2030"
                class="mt-1 block w-full border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white"
                placeholder="2024"
              />
            </div>
          </div>
          
          <div class="flex justify-end">
            <button
              type="submit"
              class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 transition-colors"
            >
              Generate Content
            </button>
          </div>
        </form>
        
        <div id="result" class="mt-6 hidden">
          <div class="bg-green-50 dark:bg-green-900 border border-green-200 dark:border-green-700 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-green-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-green-800 dark:text-green-200">
                  Content Generated Successfully!
                </h3>
                <div class="mt-2 text-sm text-green-700 dark:text-green-300">
                  <p id="resultMessage"></p>
                </div>
              </div>
            </div>
          </div>
        </div>
        
        <div id="error" class="mt-6 hidden">
          <div class="bg-red-50 dark:bg-red-900 border border-red-200 dark:border-red-700 rounded-md p-4">
            <div class="flex">
              <div class="flex-shrink-0">
                <svg class="h-5 w-5 text-red-400" viewBox="0 0 20 20" fill="currentColor">
                  <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd" />
                </svg>
              </div>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800 dark:text-red-200">
                  Error Generating Content
                </h3>
                <div class="mt-2 text-sm text-red-700 dark:text-red-300">
                  <p id="errorMessage"></p>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  document.getElementById('generateForm').addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target);
    const brand = formData.get('brand');
    const model = formData.get('model');
    const year = formData.get('year');
    
    const resultDiv = document.getElementById('result');
    const errorDiv = document.getElementById('error');
    const resultMessage = document.getElementById('resultMessage');
    const errorMessage = document.getElementById('errorMessage');
    
    // Hide previous results
    resultDiv.classList.add('hidden');
    errorDiv.classList.add('hidden');
    
    try {
      const response = await fetch('/api/generate-car', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ brand, model, year }),
      });
      
      const data = await response.json();
      
      if (response.ok) {
        resultMessage.textContent = `Content generated successfully! File: ${data.filename}`;
        resultDiv.classList.remove('hidden');
      } else {
        errorMessage.textContent = data.error || 'Failed to generate content';
        errorDiv.classList.remove('hidden');
      }
    } catch (error) {
      errorMessage.textContent = 'Network error occurred';
      errorDiv.classList.remove('hidden');
    }
  });
</script>
